/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/jUIa9OcqVuT
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"
import Link from "next/link"
import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Input } from "@/components/ui/input"
import { DropdownMenuTrigger, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuItem, DropdownMenuContent, DropdownMenu } from "@/components/ui/dropdown-menu"
import { Badge } from "@/components/ui/badge"
import AnnouncementModal from "@/components/component/AnnoucementModal"
import { CalendarCheckIcon, CircleAlertIcon, MegaphoneIcon } from "@/public/icons/icons"

export default function Notifications() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [announcements, setAnnouncements] = useState([]);

 const handleCreateAnnouncement = async (data) => {
  try {
    const response = await fetch('http://localhost:5000/api/notifications', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    if (response.ok) {
      const newAnnouncement = await response.json();
      setAnnouncements((prevAnnouncements) => [
        ...prevAnnouncements,
        newAnnouncement,
      ]);
      setIsModalOpen(false);
      console.log('New Announcement:', newAnnouncement);
    } else {
      console.error('Error creating announcement:', response.statusText);
    }
  } catch (error) {
    console.error('Error creating announcement:', error);
  }
};

  function getIcon(icon) {
  switch (icon) {
    case "calendar":
      return <CalendarCheckIcon className="w-6 h-6 text-black" />;
    case "alert":
      return <CircleAlertIcon className="w-6 h-6 text-black" />;
    case "megaphone":
      return <MegaphoneIcon className="w-6 h-6 text-black" />;
    default:
      return <CalendarCheckIcon className="w-6 h-6 text-black" />;
  }
  }
  
  useEffect(() => {
  const fetchAnnouncements = async () => {
    try {
      const response = await fetch('http://localhost:5000/api/notifications');
      if (response.ok) {
        const data = await response.json();
        setAnnouncements(data);
        console.log('Fetched announcements:', data); // Log the fetched data
      } else {
        console.error('Error fetching announcements:', response.statusText);
      }
    } catch (error) {
      console.error('Error fetching announcements:', error);
    }
  };

  fetchAnnouncements();
}, []);

  return (
    <div >
      <div className="flex flex-col">
        
        <main className="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
          <div className="flex items-center justify-between">
            <Card className="w-full">
              <CardHeader className="flex flex-row items-center justify-between pb-2 space-y-0 mb-4">
                <CardTitle className="text-sm font-medium">Announcements</CardTitle>
                <Button
                  className="bg-black text-white hover:bg-gray-900 transition-colors"
                  size="sm"
                  onClick={() => setIsModalOpen(true)}
                >
                  Create New Announcement
                </Button>
                <AnnouncementModal
                  open={isModalOpen}
                  onClose={() => setIsModalOpen(false)}
                  onSubmit={handleCreateAnnouncement}
                />
                
              </CardHeader>
              <CardContent>

                <div className="bg-gray-900 p-6">
                  <div className="space-y-4">
                    {announcements.map((announcement) => (
                      <div key={announcement.id} className="bg-gray-800 rounded-lg p-4">
                        <div className="flex items-start">
                          <div className="flex-shrink-0 w-10 h-10 rounded-full flex items-center justify-center">
                            {getIcon(announcement.icon)}
                          </div>
                          <div className="ml-4 flex-1">
                            <h3 className="text-lg font-semibold text-white">{announcement.title}</h3>
                            <p className="text-gray-400 mt-1 text-sm">{announcement.description}</p>
                            <p className="text-gray-500 text-xs mt-2">{announcement.createdAt}</p>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                {/* <div className="grid gap-4">
                  <div
                    className="flex items-start gap-4 rounded-lg bg-gray-100 p-4 dark:bg-gray-800">
                    <div
                      className="flex h-10 w-10 items-center justify-center rounded-full bg-blue-500 text-white">
                      <MegaphoneIcon className="h-5 w-5" />
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-medium">School Closed Tomorrow</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        Due to inclement weather, the school will be closed tomorrow. Please make arrangements for your
                        child's care.
                      </p>
                      <div className="mt-2 flex items-center gap-2">
                        <span className="text-xs text-gray-500 dark:text-gray-400">Posted 2 hours ago</span>
                      </div>
                    </div>
                  </div>
                  <div
                    className="flex items-start gap-4 rounded-lg bg-gray-100 p-4 dark:bg-gray-800">
                    <div
                      className="flex h-10 w-10 items-center justify-center rounded-full bg-green-500 text-white">
                      <CalendarCheckIcon className="h-5 w-5" />
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-medium">Field Trip Reminder</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        Don't forget, the 5th grade field trip to the museum is this Friday. Please make sure your child
                        is prepared.
                      </p>
                      <div className="mt-2 flex items-center gap-2">
                        <span className="text-xs text-gray-500 dark:text-gray-400">Posted 1 day ago</span>
                      </div>
                    </div>
                  </div>
                  <div
                    className="flex items-start gap-4 rounded-lg bg-gray-100 p-4 dark:bg-gray-800">
                    <div
                      className="flex h-10 w-10 items-center justify-center rounded-full bg-yellow-500 text-white">
                      <TriangleAlertIcon className="h-5 w-5" />
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-medium">Cafeteria Menu Change</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        Due to a delivery issue, the cafeteria menu has been changed for this week. Please check the
                        updated menu on the school website.
                      </p>
                      <div className="mt-2 flex items-center gap-2">  
                        <span className="text-xs text-gray-500 dark:text-gray-400">Posted 3 days ago</span>
                      </div>
                    </div>
                  </div>
                  <div
                    className="flex items-start gap-4 rounded-lg bg-gray-100 p-4 dark:bg-gray-800">
                    <div
                      className="flex h-10 w-10 items-center justify-center rounded-full bg-red-500 text-white">
                      <CircleAlertIcon className="h-5 w-5" />
                    </div>
                    <div className="flex-1">
                      <h3 className="text-lg font-medium">Security Incident</h3>
                      <p className="text-sm text-gray-500 dark:text-gray-400">
                        There was a security incident on campus earlier today. The situation has been resolved, but
                        please be vigilant and report any suspicious activity to the office.
                      </p>
                      <div className="mt-2 flex items-center gap-2">
                        <span className="text-xs text-gray-500 dark:text-gray-400">Posted 1 week ago</span>
                      </div>
                    </div>
                  </div>
                </div> */}
              </CardContent>
            </Card>
          </div>
        </main>
      </div>
    </div>
  );
}

